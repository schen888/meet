{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","detailsHidden","onClickedShowDetails","setState","onClickedHideDetails","inherits","createClass","key","value","event","props","react_default","a","createElement","className","summary","start","dateTime","timeZone","type","onClick","href","htmlLink","description","Component","EventList","events","map","id","src_Event","CitySearch","query","suggestions","handleInputChanged","target","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","_this2","onChange","NumberOfEvents","inputNr","e","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","JSON","parse","stringify","App","src_CitySearch","src_EventList","src_NumberOfEvents","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76b97d70.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n  state ={\r\n    detailsHidden: true\r\n  }\r\n\r\n  onClickedShowDetails = () => {\r\n    this.setState({detailsHidden: false})\r\n  }\r\n\r\n  onClickedHideDetails = () => {\r\n    this.setState({detailsHidden: true})\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <div className=\"Event\">\r\n        <div className=\"summary\">{event.summary}</div>\r\n        <div className=\"start-time\">{`${event.start.dateTime} (${event.start.timeZone})`}</div>\r\n        {this.state.detailsHidden===true\r\n        ? <button type=\"button\" className=\"show-details\" onClick={this.onClickedShowDetails}>Show details</button>\r\n        : (<div className=\"about-event\">\r\n            <a className=\"link-to-google\" href={event.htmlLink}>See details on Google Calendar</a>\r\n            <div className=\"description\">{event.description}</div>\r\n            <button className=\"hide-details\" type=\"button\" onClick={this.onClickedHideDetails}>Hide details</button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n        <li key={event.id}>\r\n          <Event event={event} />\r\n        </li>\r\n      )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  /* constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      query: ''\r\n    }\r\n\r\n    this.handleInputChanged=this.handleInputChanged.bind(this);\r\n  } */\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: []\r\n  }\r\n  \r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input \r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li key='all'>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  \r\n  state = {\r\n    inputNr: 32\r\n  }\r\n\r\n  handleInputChanged = (e)=>{\r\n    this.setState({\r\n      inputNr: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='NumberOfEvents'>\r\n        <input \r\n          type=\"text\"\r\n          className=\"number\"\r\n          value={this.state.inputNr}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","let mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  }\r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData };","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { mockData } from './mock-data';\n\nclass App extends Component {\n  state ={\n    events: mockData\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch />\n        <EventList events={this.state.events}/>\n        <NumberOfEvents />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n/* const root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n); */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}